{"version":3,"sources":["components/SearchForm/SearchForm.module.css","components/Modal/Modal.module.css","components/GalleryItem/GalleryItem.module.css","components/Gallery/Gallery.module.css","components/App.module.css","components/SearchForm/SearchForm.js","components/GalleryItem/GalleryItem.js","components/Gallery/Gallery.js","components/Modal/Modal.js","services/api.js","components/App.js","index.js"],"names":["module","exports","searchForm","input","overlay","modal","galleryItem","stats","statsItem","fullscreenButton","gallery","app","button","SearchForm","state","value","handleChange","event","_this","setState","target","handleSubmit","preventDefault","props","onSubmit","this","react_default","a","createElement","className","styles","onChange","type","autoComplete","placeholder","Component","GalleryItem","_ref","webformatURL","likes","views","comments","downloads","onOpen","src","alt","onClick","Gallery","items","map","item","key","id","components_GalleryItem_GalleryItem","Object","assign","largeImageURL","Modal","backdropRef","createRef","handleKeyPress","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","imageURL","ref","onKeyPress","role","fetchImages","query","page","axios","get","concat","App","images","currentQuery","selectedImageURL","isOpen","getImages","then","data","hits","loadImages","toConsumableArray","openModal","url","closeModal","handleLoad","scrollTo","top","maxHeaderSize","behavior","_this$state","react","SearchForm_SearchForm","length","components_Gallery_Gallery","getImageUrl","Modal_Modal","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f75662d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__3LRxz\",\"input\":\"SearchForm_input__3Sydh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3bgTJ\",\"modal\":\"Modal_modal__1ntr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"galleryItem\":\"GalleryItem_galleryItem__2AIkv\",\"stats\":\"GalleryItem_stats__Id8dm\",\"statsItem\":\"GalleryItem_statsItem__1wDSd\",\"fullscreenButton\":\"GalleryItem_fullscreenButton__3S-Ye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Gallery_gallery__21ihb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3KhLe\",\"button\":\"App_button__1ipk3\"};","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport styles from './SearchForm.module.css';\n\nexport default class SearchForm extends Component {\n  static propTypes = {\n    onSubmit: propTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { value } = this.state;\n    this.props.onSubmit(value);\n\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.searchForm}>\n        <input\n          className={styles.input}\n          value={value}\n          onChange={this.handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search images...\"\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './GalleryItem.module.css';\n\nconst GalleryItem = ({\n  webformatURL,\n  likes,\n  views,\n  comments,\n  downloads,\n  onOpen,\n}) => (\n  <div className={styles.galleryItem}>\n    <img src={webformatURL} alt=\"\" />\n\n    <div className={styles.stats}>\n      <p className={styles.statsItem}>\n        <i className=\"material-icons\">thumb_up</i>\n        {likes}\n      </p>\n      <p className={styles.statsItem}>\n        <i className=\"material-icons\">visibility</i>\n        {views}\n      </p>\n      <p className={styles.statsItem}>\n        <i className=\"material-icons\">comment</i>\n        {comments}\n      </p>\n      <p className={styles.statsItem}>\n        <i className=\"material-icons\">cloud_download</i>\n        {downloads}\n      </p>\n    </div>\n    <button type=\"button\" className={styles.fullscreenButton} onClick={onOpen}>\n      <i className=\"material-icons\">zoom_out_map</i>\n    </button>\n  </div>\n);\n\nGalleryItem.propTypes = {\n  webformatURL: propTypes.string.isRequired,\n  likes: propTypes.number.isRequired,\n  views: propTypes.number.isRequired,\n  comments: propTypes.number.isRequired,\n  downloads: propTypes.number.isRequired,\n  onOpen: propTypes.func.isRequired,\n};\n\nexport default GalleryItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport GalleryItem from '../GalleryItem/GalleryItem';\nimport styles from './Gallery.module.css';\n\nconst Gallery = ({ items, onOpen }) => (\n  <ul className={styles.gallery}>\n    {items.map(item => (\n      <li key={item.id}>\n        <GalleryItem {...item} onOpen={() => onOpen(item.largeImageURL)} />\n      </li>\n    ))}\n  </ul>\n);\n\nGallery.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      largeImageURL: propTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onOpen: propTypes.func.isRequired,\n};\n\nexport default Gallery;\n","import React, { Component, createRef } from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    imageURL: propTypes.string.isRequired,\n    onClose: propTypes.func.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = event => {\n    if (event.code !== 'Escape') return;\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = event => {\n    const { current } = this.backdropRef;\n\n    if (current && event.target !== current) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const { imageURL } = this.props;\n    return (\n      <div\n        className={styles.overlay}\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n        onKeyPress={this.handleKeyPress}\n        role=\"presentation\"\n      >\n        <div className={styles.modal}>\n          <img src={imageURL} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=';\nconst KEY = '12491613-658b31097eea137c2f850aec7';\nconst fetchImages = (query, page) => {\n  return axios.get(`${URL}${query}&page=${page}&per_page=12&key=${KEY}`);\n};\nexport default fetchImages;\n","import React, { Component, Fragment } from 'react';\nimport { maxHeaderSize } from 'http';\nimport SearchForm from './SearchForm/SearchForm';\nimport Gallery from './Gallery/Gallery';\nimport Modal from './Modal/Modal';\nimport fetchImages from '../services/api';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  static propTypes = {};\n\n  state = {\n    images: [],\n    page: 1,\n    currentQuery: '',\n    selectedImageURL: null,\n    isOpen: false,\n  };\n\n  componentDidMount() {\n    window.scrollTo({ top: maxHeaderSize, behavior: 'smooth' });\n  }\n\n  getImages = value => {\n    const { page } = this.state;\n\n    fetchImages(value, page).then(data =>\n      this.setState({ images: data.data.hits, currentQuery: value }),\n    );\n    this.setState({\n      images: [],\n      page: 1,\n      selectedImageURL: null,\n      currentQuery: '',\n    });\n  };\n\n  loadImages = () => {\n    fetchImages(this.state.currentQuery, this.state.page).then(data =>\n      this.setState(state => ({\n        images: [...state.images, ...data.data.hits],\n      })),\n    );\n  };\n\n  openModal = url => this.setState({ isOpen: true, selectedImageURL: url });\n\n  closeModal = () => this.setState({ isOpen: false });\n\n  handleLoad = () => {\n    this.setState(state => ({ page: state.page + 1 }), this.loadImages);\n  };\n\n  render() {\n    const { images, isOpen, selectedImageURL } = this.state;\n\n    return (\n      <Fragment>\n        <SearchForm onSubmit={this.getImages} />\n        {images.length > 0 && (\n          <Fragment>\n            <Gallery\n              items={images}\n              getImageUrl={this.getImageUrl}\n              onOpen={this.openModal}\n              onClose={this.closeModal}\n              isOpen={isOpen}\n            />\n            <button\n              type=\"button\"\n              onClick={this.handleLoad}\n              className={styles.button}\n            >\n              Load more\n            </button>\n          </Fragment>\n        )}\n        {isOpen && (\n          <Modal imageURL={selectedImageURL} onClose={this.closeModal} />\n        )}\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}